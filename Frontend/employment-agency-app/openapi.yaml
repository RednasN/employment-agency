openapi: 3.0.1
info:
  title: Jex.Api
  version: '1.0'
paths:
  /Company:
    get:
      tags:
        - Company
      parameters:
        - name: IncludeVacancies
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyDto'
    post:
      tags:
        - Company
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompanyCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateCompanyCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateCompanyCommand'
      responses:
        '201':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
    put:
      tags:
        - Company
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyCommand'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
    delete:
      tags:
        - Company
      parameters:
        - name: Id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Success
  /Vacancy:
    get:
      tags:
        - Vacancy
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VacancyDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VacancyDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VacancyDto'
    post:
      tags:
        - Vacancy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVacancyCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateVacancyCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateVacancyCommand'
      responses:
        '201':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
    put:
      tags:
        - Vacancy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVacancyCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateVacancyCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateVacancyCommand'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
    delete:
      tags:
        - Vacancy
      parameters:
        - name: Id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Success
components:
  schemas:
    CompanyDto:
      required:
        - address
        - id
        - name
        - vacancies
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        address:
          type: string
        vacancies:
          type: array
          items:
            $ref: '#/components/schemas/VacancyDto'
      additionalProperties: false
    CreateCompanyCommand:
      required:
        - address
        - name
      type: object
      properties:
        name:
          type: string
        address:
          type: string
      additionalProperties: false
    CreateVacancyCommand:
      required:
        - description
        - title
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        companyId:
          type: integer
          format: int32
      additionalProperties: false
    UpdateCompanyCommand:
      required:
        - address
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        address:
          type: string
      additionalProperties: false
    UpdateVacancyCommand:
      required:
        - description
        - title
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
      additionalProperties: false
    VacancyDto:
      required:
        - description
        - id
        - title
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
        isActive:
          type: boolean
      additionalProperties: false
    ValidationProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
          readOnly: true
      additionalProperties: {}
